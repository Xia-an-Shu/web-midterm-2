# BASE URL FOR NEST APP: http://localhost:3000/members

# ~ ~ Create a valid member ~ ~ #

# url
http://localhost:3000/members

# body
{
  "name": "John Doe",
  "email": "test@gmail.com",
  "birthdate": "1990-01-01",
}

# post response
var data = pm.response.json();
pm.globals.set("memberId", data.id);

pm.test("Status code is 201", function () {
    pm.response.to.have.status(201);
});

# ~ ~ create an invalid member ~ ~ #

# url
http://localhost:3000/members

# body
{
  "name": "John Doe",
  "email": "invalid",
  "birthdate": "1990-01-01"
}

# post response
pm.test("Status code is 412", function () {
    pm.response.to.have.status(412);
});

pm.test("Response body contains error message", function () {
    var data = pm.response.json();
    pm.expect(data.message).to.eql("Invalid email");
});

# ~ ~ Get all members ~ ~ #

# url
http://localhost:3000/members

# post response
pm.test("Status code is 200", function () {
    pm.response.to.have.status(200);
});

pm.test("Number of members > 0", function () {
    var data = pm.response.json();
    pm.expect(data.length).to.greaterThan(0);   
});

# ~ ~ Get a member ~ ~ #

# url
http://localhost:3000/members/{{memberId}}

# post response
pm.test("Status code is 200", function () {
    pm.response.to.have.status(200);
});

# ~ ~ Get a non-existing member ~ ~ #

# url
http://localhost:3000/members/00000000-0000-0000-0000-000000000000

# post response
pm.test("Status code is 404", function () {
    pm.response.to.have.status(404);
});

pm.test("Response body contains error message", function () {
    var data = pm.response.json();
    pm.expect(data.message).to.eql("Partner not found");
});

