{
	"info": {
		"_postman_id": "6d46c4b5-b1c3-43e4-bce3-2df03768eb83",
		"name": "Partners - Clubs",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
		"_exporter_id": "34538685"
	},
	"item": [
		{
			"name": "create a valid club beforehand",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"var data = pm.response.json();\r",
							"pm.globals.set(\"clubId\", data.id);\r",
							"\r",
							"pm.test(\"Status code is 201\", function () {\r",
							"    pm.response.to.have.status(201);\r",
							"});"
						],
						"type": "text/javascript",
						"packages": {}
					}
				},
				{
					"listen": "prerequest",
					"script": {
						"exec": [],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\r\n    \"name\": \"Club Name\",\r\n    \"foundationDate\": \"2021-01-01\",\r\n    \"image\": \"http://image.com\",\r\n    \"description\": \"Club Description\"\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "http://localhost:3000/club/",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "3000",
					"path": [
						"club",
						""
					]
				}
			},
			"response": []
		},
		{
			"name": "create a valid member #1 beforehand",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"var data = pm.response.json();\r",
							"pm.globals.set(\"memberId1\", data.id);\r",
							"\r",
							"pm.test(\"Status code is 201\", function () {\r",
							"    pm.response.to.have.status(201);\r",
							"});"
						],
						"type": "text/javascript",
						"packages": {}
					}
				},
				{
					"listen": "prerequest",
					"script": {
						"exec": [],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\r\n  \"name\": \"John Doe\",\r\n  \"email\": \"test@gmail.com\",\r\n  \"birthdate\": \"1990-01-01\"\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "http://localhost:3000/members",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "3000",
					"path": [
						"members"
					]
				}
			},
			"response": []
		},
		{
			"name": "add member #1 to club",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 201\", function () {\r",
							"    pm.response.to.have.status(201);\r",
							"});"
						],
						"type": "text/javascript",
						"packages": {}
					}
				},
				{
					"listen": "prerequest",
					"script": {
						"exec": [],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"url": {
					"raw": "http://localhost:3000/clubs/{{clubId}}/members/{{memberId1}}",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "3000",
					"path": [
						"clubs",
						"{{clubId}}",
						"members",
						"{{memberId1}}"
					]
				}
			},
			"response": []
		},
		{
			"name": "create a valid member #2 beforehand",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"var data = pm.response.json();\r",
							"pm.globals.set(\"memberId2\", data.id);\r",
							"\r",
							"pm.test(\"Status code is 201\", function () {\r",
							"    pm.response.to.have.status(201);\r",
							"});"
						],
						"type": "text/javascript",
						"packages": {}
					}
				},
				{
					"listen": "prerequest",
					"script": {
						"exec": [],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\r\n  \"name\": \"Carl Johnson\",\r\n  \"email\": \"test@gmail.com\",\r\n  \"birthdate\": \"1990-01-01\"\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "http://localhost:3000/members",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "3000",
					"path": [
						"members"
					]
				}
			},
			"response": []
		},
		{
			"name": "add member #2 to club",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 201\", function () {\r",
							"    pm.response.to.have.status(201);\r",
							"});"
						],
						"type": "text/javascript",
						"packages": {}
					}
				},
				{
					"listen": "prerequest",
					"script": {
						"exec": [
							""
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "http://localhost:3000/clubs/{{clubId}}/members/{{memberId2}}",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "3000",
					"path": [
						"clubs",
						"{{clubId}}",
						"members",
						"{{memberId2}}"
					]
				}
			},
			"response": []
		},
		{
			"name": "associate member to a non-existing club",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 404\", function () {\r",
							"    pm.response.to.have.status(404);\r",
							"});\r",
							"\r",
							"pm.test(\"Response body contains error message\", function () {\r",
							"    var data = pm.response.json();\r",
							"    pm.expect(data.message).to.eql(\"Club not found\");\r",
							"});"
						],
						"type": "text/javascript",
						"packages": {}
					}
				},
				{
					"listen": "prerequest",
					"script": {
						"exec": [],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"url": {
					"raw": "http://localhost:3000/clubs/00000000-0000-0000-0000-000000000000/members/{{memberId1}}",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "3000",
					"path": [
						"clubs",
						"00000000-0000-0000-0000-000000000000",
						"members",
						"{{memberId1}}"
					]
				}
			},
			"response": []
		},
		{
			"name": "get all club members",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});\r",
							"\r",
							"pm.test(\"Number of members > 0\", function () {\r",
							"    var data = pm.response.json();\r",
							"    pm.expect(data.length).to.greaterThan(0);   \r",
							"});"
						],
						"type": "text/javascript",
						"packages": {}
					}
				},
				{
					"listen": "prerequest",
					"script": {
						"exec": [],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "http://localhost:3000/clubs/{{clubId}}/members",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "3000",
					"path": [
						"clubs",
						"{{clubId}}",
						"members"
					]
				}
			},
			"response": []
		},
		{
			"name": "get a member that belongs to a club",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});"
						],
						"type": "text/javascript",
						"packages": {}
					}
				},
				{
					"listen": "prerequest",
					"script": {
						"exec": [],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "http://localhost:3000/clubs/{{clubId}}/members/{{memberId1}}",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "3000",
					"path": [
						"clubs",
						"{{clubId}}",
						"members",
						"{{memberId1}}"
					]
				}
			},
			"response": []
		},
		{
			"name": "get a member that is not part of a club",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 404\", function () {\r",
							"    pm.response.to.have.status(404);\r",
							"});\r",
							"\r",
							"pm.test(\"Response body contains error message\", function () {\r",
							"    var data = pm.response.json();\r",
							"    pm.expect(data.message).to.eql(\"Partner not found\");\r",
							"});"
						],
						"type": "text/javascript",
						"packages": {}
					}
				},
				{
					"listen": "prerequest",
					"script": {
						"exec": [],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "http://localhost:3000/clubs/{{clubId}}/members/00000000-0000-0000-0000-000000000000",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "3000",
					"path": [
						"clubs",
						"{{clubId}}",
						"members",
						"00000000-0000-0000-0000-000000000000"
					]
				}
			},
			"response": []
		},
		{
			"name": "update all club members",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 201\", function () {\r",
							"    pm.response.to.have.status(201);\r",
							"});"
						],
						"type": "text/javascript",
						"packages": {}
					}
				},
				{
					"listen": "prerequest",
					"script": {
						"exec": [],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "[\r\n    {\r\n        \"id\": \"{{memberId1}}\",\r\n        \"name\": \"John Doe Changed\",\r\n        \"email\": \"test@gmail.com\",\r\n        \"birthdate\": \"1990-01-01\"\r\n    },\r\n    {\r\n        \"id\": \"{{memberId2}}\",\r\n        \"name\": \"Carl Johnson Changed\",\r\n        \"email\": \"test@gmail.com\",\r\n        \"birthdate\": \"1990-01-01\"\r\n    }\r\n]",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "http://localhost:3000/clubs/{{clubId}}/members",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "3000",
					"path": [
						"clubs",
						"{{clubId}}",
						"members"
					]
				}
			},
			"response": []
		},
		{
			"name": "update all club members with a non-existing member",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 404\", function () {\r",
							"    pm.response.to.have.status(404);\r",
							"});\r",
							"\r",
							"pm.test(\"Response body contains error message\", function () {\r",
							"    var data = pm.response.json();\r",
							"    pm.expect(data.message).to.eql(\"Partner not found\");\r",
							"});"
						],
						"type": "text/javascript",
						"packages": {}
					}
				},
				{
					"listen": "prerequest",
					"script": {
						"exec": [],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "[\r\n    {\r\n        \"id\": \"{{memberId1}}\",\r\n        \"name\": \"John Doe Changed\",\r\n        \"email\": \"test@gmail.com\",\r\n        \"birthdate\": \"1990-01-01\"\r\n    },\r\n    {\r\n        \"id\": \"00000000-0000-0000-0000-000000000000\",\r\n        \"name\": \"Carl Johnson Changed\",\r\n        \"email\": \"test@gmail.com\",\r\n        \"birthdate\": \"1990-01-01\"\r\n    }\r\n]",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "http://localhost:3000/clubs/{{clubId}}/members",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "3000",
					"path": [
						"clubs",
						"{{clubId}}",
						"members"
					]
				}
			},
			"response": []
		},
		{
			"name": "delete a member that belongs to a club",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 204\", function () {\r",
							"    pm.response.to.have.status(204);\r",
							"});"
						],
						"type": "text/javascript",
						"packages": {}
					}
				},
				{
					"listen": "prerequest",
					"script": {
						"exec": [],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "DELETE",
				"header": [],
				"url": {
					"raw": "http://localhost:3000/clubs/{{clubId}}/members/{{memberId1}}",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "3000",
					"path": [
						"clubs",
						"{{clubId}}",
						"members",
						"{{memberId1}}"
					]
				}
			},
			"response": []
		},
		{
			"name": "delete a member that is not part of a club",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 404\", function () {\r",
							"    pm.response.to.have.status(404);\r",
							"});\r",
							"\r",
							"pm.test(\"Response body contains error message\", function () {\r",
							"    var data = pm.response.json();\r",
							"    pm.expect(data.message).to.eql(\"Partner not found\");\r",
							"});"
						],
						"type": "text/javascript",
						"packages": {}
					}
				},
				{
					"listen": "prerequest",
					"script": {
						"exec": [],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "DELETE",
				"header": [],
				"url": {
					"raw": "http://localhost:3000/clubs/{{clubId}}/members/{{memberId1}}",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "3000",
					"path": [
						"clubs",
						"{{clubId}}",
						"members",
						"{{memberId1}}"
					]
				}
			},
			"response": []
		}
	]
}